name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (patch, minor, major, or specific version like 1.2.3)'
        required: true
        default: 'patch'
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        persist-credentials: true
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
        
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build
      run: pnpm run build
      
    - name: Run quality checks
      run: |
        pnpm run check
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Configure npm authentication
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        if [ "${{ github.event.inputs.release-type }}" != "" ]; then
          pnpm run release ${{ github.event.inputs.release-type }} --ci
        else
          pnpm run release --ci
        fi
